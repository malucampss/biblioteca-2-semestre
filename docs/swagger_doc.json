{
    "openapi": "3.0.0",
    "info": {
      "version": "v1.0.0",
      "title": "Biblioteca",
      "description": "Implementação do Swagger à API"
    },
    "servers": [
      {
        "url": "http://localhost:3333",
        "description": "Servidor local"
      }
    ],
    "paths": {
      "/": {
        "get": {
          "description": "Rota raiz da API",
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/novo/aluno": {
        "post": {
          "tags": ["Alunos"],
          "summary": "Cadastrar novo aluno",
          "description": "Esta rota recebe informações de um aluno para cadastrar no banco de dados.",
          "security": [
            {
              "apiKey": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nome": { "type": "string", "example": "Samuel" },
                    "sobrenome": { "type": "string", "example": "Viana" },
                    "dataNascimento": { "type": "string", "format": "date", "example": "1995-01-26" },
                    "endereco": { "type": "string", "example": "Parque Leblon, 478" },
                    "email": { "type": "string", "format": "email", "example": "samuel.caua.viana@facebook.com" },
                    "celular": { "type": "string", "example": "85996712239" }
                  },
                  "required": ["nome", "sobrenome", "dataNascimento", "endereco", "email", "celular"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Aluno cadastrado com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "mensagem": {
                        "type": "string",
                        "example": "Aluno cadastrado com sucesso"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Não foi possível cadastrar o aluno",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "erro": {
                        "type": "string",
                        "example": "Dados inválidos ou incompletos"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/lista/aluno": {
        "get": {
          "summary": "Listar informações de um aluno",
          "description": "Esta rota retorna as informações de um aluno específico do banco de dados. É necessário fornecer um token de autenticação no cabeçalho da requisição.",
          "tags": ["Alunos"],
          "parameters": [
            {
              "name": "x-access-token",
              "in": "header",
              "description": "Token JWT gerado no login para autenticação",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Informações do aluno retornadas com sucesso",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "nome": { "type": "string" },
                      "sobrenome": { "type": "string" },
                      "dataNascimento": { "type": "string", "format": "date" },
                      "endereco": { "type": "string" },
                      "celular": { "type": "string" }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Erro ao recuperar as informações do aluno"
            },
            "401": {
              "description": "Token inválido ou não fornecido"
            },
            "500": {
              "description": "Erro interno do servidor"
            }
          },
          "security": [
            {
              "apiKey": []
            }
          ]
        }
      },
      "/remover/aluno": {
        "put": {
          "summary": "Remover aluno",
          "description": "Esta rota remove um aluno do banco de dados. É necessário fornecer o token de autenticação no cabeçalho e o identificador do aluno no corpo da requisição.",
          "tags": ["Alunos"],
          "parameters": [
            {
              "name": "x-access-token",
              "in": "header",
              "description": "Token JWT gerado no login para autenticação",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 123 }
                  },
                  "required": ["id"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Aluno removido com sucesso"
            },
            "400": {
              "description": "Requisição inválida (por exemplo, ID ausente ou malformado)"
            },
            "401": {
              "description": "Token inválido ou não fornecido"
            },
            "404": {
              "description": "Aluno não encontrado"
            },
            "500": {
              "description": "Erro interno do servidor ao tentar remover o aluno"
            }
          },
          "security": [
            {
              "apiKey": []
            }
          ]
        }
      },
      "/atualizar/aluno": {
        "put": {
          "summary": "Atualizar informações de um aluno",
          "description": "Esta rota recebe os dados de um aluno e atualiza suas informações no banco de dados. É necessário fornecer o token de autenticação no cabeçalho da requisição.",
          "tags": ["Alunos"],
          "parameters": [
            {
              "name": "x-access-token",
              "in": "header",
              "description": "Token JWT gerado no login para autenticação",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nome": { "type": "string", "example": "Lucas" },
                    "sobrenome": { "type": "string", "example": "Campos" },
                    "dataNascimento": { "type": "string", "format": "date", "example": "2009-01-11" },
                    "endereco": { "type": "string", "example": "Parque Leblon, 789" },
                    "email": { "type": "string", "format": "email", "example": "lucas.campos@facebook.com" },
                    "celular": { "type": "string", "example": "45396712289" }
                  },
                  "required": ["nome", "sobrenome", "dataNascimento", "endereco", "email", "celular"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Cadastro atualizado com sucesso"
            },
            "400": {
              "description": "Não foi possível atualizar o aluno no banco de dados"
            },
            "401": {
              "description": "Token de autenticação inválido ou ausente"
            },
            "404": {
              "description": "Aluno não encontrado"
            },
            "500": {
              "description": "Erro interno no servidor"
            }
          },
          "security": [
            {
              "apiKey": []
            }
          ]
        }
      }
    },
    "components": {
      "securitySchemes": {
        "apiKey": {
          "type": "apiKey",
          "in": "header",
          "name": "x-access-token"
        }
      }
    }
  }
  